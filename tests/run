#!/usr/bin/env sh

execute_test() {
  echo "Running $1"
  docker run --rm --init -v "$PWD"/hooks:/app/hooks:ro -v "$PWD"/tests:/app/tests:ro git-hooks-test:latest timeout 5s sh "$1"
}

execute_test_bg() {
  docker run --rm --init -v "$PWD"/hooks:/app/hooks:ro -v "$PWD"/tests:/app/tests:ro git-hooks-test:latest timeout 5s sh "$1" &
  echo "[$!] Running $1"
}

run_sync() {
  set -e

  if [ -d "$1" ]; then
    test_files=$(find "$1" -type f -name 'it-*.sh')

    for file in $test_files; do
      execute_test "$file"
    done
  else
    execute_test "$1"
  fi
}

run_async() {
  pids=""
  test_files=$(find "$1" -type f -name 'it-*.sh')

  for file in $test_files; do
    execute_test_bg "$file"

    pids="$pids $!"
  done

  for pid in $pids; do
    wait "$pid"
    exit_code="$?"

    if [ $exit_code -eq 0 ]; then
      echo "$pid passed"
    else
      echo "$pid failed ($exit_code)"
      tests_failed=1
    fi
  done

  # shellcheck disable=SC2086
  exit $tests_failed
}

if [ -n "$1" ]; then
  run_sync "$1"
else
  run_async "$(dirname "$0")"
fi
